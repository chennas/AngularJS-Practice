apiVersion: backstage.io/v1beta2
kind: Template
metadata:
  name: tech-docs-template
  title: Documentation Template
  description: Create a new standalone documentation project
  tags:
    - techdocs
    - mkdocs
spec:
  owner: gwc139/siva-shared-code
  type: documentation

  parameters:
    - title: Fill in some steps
      required:
        - name
        - description
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          ui:autofocus: true
          ui:options:
            rows: 5
        description:
          title: Description
          type: string
          description: A description for the component
          ui:options:
            rows: 5
        owner:
          title: Owner
          type: string
          description: Owner for the component
          default: user:siva.kumar2
          ui:options:
            rows: 5
    - title: Choose a repository location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
              - dev.azure.com
  # This template is meant to be used on top of an existing tmeplate.
  # By adding the following and fetching from an absolute URL you can 
  # add in the docs template
  steps:
    - id: fetch
      name: Template Docs Skeleton
      action: fetch:template
      input:
        url: ./skeleton
        cookiecutterCompat: true
        values:
          name: '{{ parameters.name }}'
          description: '{{ parameters.description }}' 
          destination: '{{ parseRepoUrl parameters.repoUrl }}'
          owner: '{{ parameters.owner }}'

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com','dev.azure.com']
        description: '{{ parameters.description }}'
        repoUrl: '{{ parameters.repoUrl }}'

  output:
    remoteUrl: '{{ steps.publish.output.remoteUrl }}'
    entityRef: '{{ steps.register.output.entityRef }}'
